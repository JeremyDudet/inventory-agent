{
  "id": "93e02332-f048-436d-8151-83da0fdfdb56",
  "prevId": "a4e71145-d4c0-403d-9a60-42e71f18619a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.categories": {
      "name": "categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "categories_name_key": {
          "name": "categories_name_key",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.customers": {
      "name": "customers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "customers_user_id_fkey": {
          "name": "customers_user_id_fkey",
          "tableFrom": "customers",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "customers_user_id_key": {
          "name": "customers_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "user_id"
          ]
        },
        "customers_stripe_customer_id_key": {
          "name": "customers_stripe_customer_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_customer_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.inventory_items": {
      "name": "inventory_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sku": {
          "name": "sku",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "unit": {
          "name": "unit",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "threshold": {
          "name": "threshold",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "last_updated": {
          "name": "last_updated",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1536)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "inventory_items_location_id_fkey": {
          "name": "inventory_items_location_id_fkey",
          "tableFrom": "inventory_items",
          "tableTo": "locations",
          "columnsFrom": [
            "location_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "inventory_items_location_id_name_key": {
          "name": "inventory_items_location_id_name_key",
          "nullsNotDistinct": false,
          "columns": [
            "location_id",
            "name"
          ]
        },
        "inventory_items_sku_key": {
          "name": "inventory_items_sku_key",
          "nullsNotDistinct": false,
          "columns": [
            "sku"
          ]
        }
      },
      "policies": {
        "Allow access based on user locations": {
          "name": "Allow access based on user locations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 \n        FROM user_locations \n        WHERE user_locations.location_id = inventory_items.location_id \n        AND user_locations.user_id = auth.uid()\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.inventory_updates": {
      "name": "inventory_updates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "previous_quantity": {
          "name": "previous_quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "new_quantity": {
          "name": "new_quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "unit": {
          "name": "unit",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_name": {
          "name": "user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "method": {
          "name": "method",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ui'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "inventory_updates_item_id_fkey": {
          "name": "inventory_updates_item_id_fkey",
          "tableFrom": "inventory_updates",
          "tableTo": "inventory_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Allow insert based on user role per location": {
          "name": "Allow insert based on user role per location",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1\n        FROM inventory_items ii\n        JOIN user_locations ul ON ii.location_id = ul.location_id\n        JOIN user_roles ur ON ul.role_id = ur.id\n        WHERE ii.id = inventory_updates.item_id\n          AND ul.user_id = auth.uid()\n          AND ur.name IN ('owner', 'team-member')\n      )"
        },
        "Allow select based on user role per location": {
          "name": "Allow select based on user role per location",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1\n        FROM inventory_items ii\n        JOIN user_locations ul ON ii.location_id = ul.location_id\n        JOIN user_roles ur ON ul.role_id = ur.id\n        WHERE ii.id = inventory_updates.item_id\n          AND ul.user_id = auth.uid()\n          AND ur.name IN ('owner', 'team-member')\n      )"
        }
      },
      "checkConstraints": {
        "inventory_updates_action_check": {
          "name": "inventory_updates_action_check",
          "value": "action = ANY (ARRAY['add'::text, 'remove'::text, 'set'::text, 'check'::text])"
        },
        "inventory_updates_method_check": {
          "name": "inventory_updates_method_check",
          "value": "method = ANY (ARRAY['ui'::text, 'voice'::text, 'api'::text, 'undo'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.invite_codes": {
      "name": "invite_codes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "used_by": {
          "name": "used_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "used_at": {
          "name": "used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "invite_codes_location_id_fkey": {
          "name": "invite_codes_location_id_fkey",
          "tableFrom": "invite_codes",
          "tableTo": "locations",
          "columnsFrom": [
            "location_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invite_codes_created_by_fkey": {
          "name": "invite_codes_created_by_fkey",
          "tableFrom": "invite_codes",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "invite_codes_used_by_fkey": {
          "name": "invite_codes_used_by_fkey",
          "tableFrom": "invite_codes",
          "tableTo": "profiles",
          "columnsFrom": [
            "used_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "invite_codes_code_key": {
          "name": "invite_codes_code_key",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.locations": {
      "name": "locations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'UTC'::text)"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "(now() AT TIME ZONE 'UTC'::text)"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.revoked_tokens": {
      "name": "revoked_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "token_jti": {
          "name": "token_jti",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "revoked_at": {
          "name": "revoked_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "revoked_tokens_expires_at_idx": {
          "name": "revoked_tokens_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "revoked_tokens_user_id_fkey": {
          "name": "revoked_tokens_user_id_fkey",
          "tableFrom": "revoked_tokens",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "revoked_tokens_token_jti_key": {
          "name": "revoked_tokens_token_jti_key",
          "nullsNotDistinct": false,
          "columns": [
            "token_jti"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session_logs": {
      "name": "session_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_final": {
          "name": "is_final",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "confidence": {
          "name": "confidence",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "session_id": {
          "name": "session_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "session_logs_session_id_idx": {
          "name": "session_logs_session_id_idx",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "session_logs_timestamp_idx": {
          "name": "session_logs_timestamp_idx",
          "columns": [
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "session_logs_type_idx": {
          "name": "session_logs_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "session_logs_user_id_idx": {
          "name": "session_logs_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view their own session logs": {
          "name": "Users can view their own session logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "((user_id = auth.uid()) OR ((auth.jwt() ? 'user_role'::text) AND (((auth.jwt() ->> 'user_role'::text) = 'manager'::text) OR ((auth.jwt() ->> 'user_role'::text) = 'owner'::text))))"
        },
        "Allow authenticated users to insert logs": {
          "name": "Allow authenticated users to insert logs",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {
        "session_logs_status_check": {
          "name": "session_logs_status_check",
          "value": "status = ANY (ARRAY['success'::text, 'error'::text, 'pending'::text, 'info'::text])"
        },
        "session_logs_type_check": {
          "name": "session_logs_type_check",
          "value": "type = ANY (ARRAY['transcript'::text, 'action'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.subscription_plans": {
      "name": "subscription_plans",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "stripe_price_id": {
          "name": "stripe_price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_product_id": {
          "name": "stripe_product_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'usd'"
        },
        "interval": {
          "name": "interval",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "interval_count": {
          "name": "interval_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "trial_period_days": {
          "name": "trial_period_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_locations": {
          "name": "max_locations",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "max_team_members": {
          "name": "max_team_members",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "features": {
          "name": "features",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscription_plans_stripe_price_id_key": {
          "name": "subscription_plans_stripe_price_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_price_id"
          ]
        },
        "subscription_plans_stripe_product_id_key": {
          "name": "subscription_plans_stripe_product_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_product_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "subscription_plans_interval_check": {
          "name": "subscription_plans_interval_check",
          "value": "interval = ANY (ARRAY['month'::text, 'year'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.subscription_usage": {
      "name": "subscription_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "subscription_id": {
          "name": "subscription_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "metric": {
          "name": "metric",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "period_start": {
          "name": "period_start",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "period_end": {
          "name": "period_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "subscription_usage_subscription_id_idx": {
          "name": "subscription_usage_subscription_id_idx",
          "columns": [
            {
              "expression": "subscription_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscription_usage_subscription_id_fkey": {
          "name": "subscription_usage_subscription_id_fkey",
          "tableFrom": "subscription_usage",
          "tableTo": "subscriptions",
          "columnsFrom": [
            "subscription_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscription_usage_subscription_metric_period_key": {
          "name": "subscription_usage_subscription_metric_period_key",
          "nullsNotDistinct": false,
          "columns": [
            "subscription_id",
            "metric",
            "period_start"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.subscriptions": {
      "name": "subscriptions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "plan_id": {
          "name": "plan_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_subscription_id": {
          "name": "stripe_subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "current_period_start": {
          "name": "current_period_start",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "current_period_end": {
          "name": "current_period_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "trial_end": {
          "name": "trial_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "cancel_at_period_end": {
          "name": "cancel_at_period_end",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "canceled_at": {
          "name": "canceled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ended_at": {
          "name": "ended_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "subscriptions_customer_id_idx": {
          "name": "subscriptions_customer_id_idx",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "subscriptions_status_idx": {
          "name": "subscriptions_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subscriptions_customer_id_fkey": {
          "name": "subscriptions_customer_id_fkey",
          "tableFrom": "subscriptions",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "subscriptions_plan_id_fkey": {
          "name": "subscriptions_plan_id_fkey",
          "tableFrom": "subscriptions",
          "tableTo": "subscription_plans",
          "columnsFrom": [
            "plan_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "subscriptions_stripe_subscription_id_key": {
          "name": "subscriptions_stripe_subscription_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_subscription_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "subscriptions_status_check": {
          "name": "subscriptions_status_check",
          "value": "status = ANY (ARRAY['active'::text, 'canceled'::text, 'incomplete'::text, 'incomplete_expired'::text, 'past_due'::text, 'paused'::text, 'trialing'::text, 'unpaid'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.undo_actions": {
      "name": "undo_actions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "action_type": {
          "name": "action_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "item_id": {
          "name": "item_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "item_name": {
          "name": "item_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "previous_state": {
          "name": "previous_state",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "current_state": {
          "name": "current_state",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "method": {
          "name": "method",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ui'"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "undo_actions_user_id_idx": {
          "name": "undo_actions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "undo_actions_expires_at_idx": {
          "name": "undo_actions_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "undo_actions_created_at_idx": {
          "name": "undo_actions_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "undo_actions_user_id_fkey": {
          "name": "undo_actions_user_id_fkey",
          "tableFrom": "undo_actions",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "undo_actions_item_id_fkey": {
          "name": "undo_actions_item_id_fkey",
          "tableFrom": "undo_actions",
          "tableTo": "inventory_items",
          "columnsFrom": [
            "item_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can only access their own undo actions": {
          "name": "Users can only access their own undo actions",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "user_id = auth.uid()"
        }
      },
      "checkConstraints": {
        "undo_actions_action_type_check": {
          "name": "undo_actions_action_type_check",
          "value": "action_type = ANY (ARRAY['inventory_update'::text, 'item_create'::text, 'item_delete'::text, 'bulk_update'::text])"
        },
        "undo_actions_method_check": {
          "name": "undo_actions_method_check",
          "value": "method = ANY (ARRAY['ui'::text, 'voice'::text, 'api'::text, 'undo'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.user_locations": {
      "name": "user_locations",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "location_id": {
          "name": "location_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role_id": {
          "name": "role_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_locations_user_id_fkey": {
          "name": "user_locations_user_id_fkey",
          "tableFrom": "user_locations",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_locations_location_id_fkey": {
          "name": "user_locations_location_id_fkey",
          "tableFrom": "user_locations",
          "tableTo": "locations",
          "columnsFrom": [
            "location_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_locations_role_id_fkey": {
          "name": "user_locations_role_id_fkey",
          "tableFrom": "user_locations",
          "tableTo": "user_roles",
          "columnsFrom": [
            "role_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_locations_user_id_location_id_pk": {
          "name": "user_locations_user_id_location_id_pk",
          "columns": [
            "user_id",
            "location_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_roles_name_key": {
          "name": "user_roles_name_key",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.waiting_list": {
      "name": "waiting_list",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "business_type": {
          "name": "business_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "inventory_method": {
          "name": "inventory_method",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "software_name": {
          "name": "software_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "waiting_list_email_key": {
          "name": "waiting_list_email_key",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}